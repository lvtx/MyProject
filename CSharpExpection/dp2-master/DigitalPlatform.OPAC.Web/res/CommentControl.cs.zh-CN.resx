<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="上传图像文件" xml:space="preserve">
    <value>上传图像文件</value>
  </data>
  <data name="不要订购本书" xml:space="preserve">
    <value>不要订购本书</value>
  </data>
  <data name="作者" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="作者头像" xml:space="preserve">
    <value>作者头像</value>
  </data>
  <data name="修改者" xml:space="preserve">
    <value>修改者</value>
  </data>
  <data name="其他" xml:space="preserve">
    <value>其他信息</value>
    <comment>编辑区域</comment>
  </data>
  <data name="其他人(非管理员)看不到下列内容" xml:space="preserve">
    <value>其他人(非管理员)看不到下列内容</value>
  </data>
  <data name="创建" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="创建者" xml:space="preserve">
    <value>创建者</value>
  </data>
  <data name="删除" xml:space="preserve">
    <value>删除</value>
    <comment>命令按钮</comment>
  </data>
  <data name="取消" xml:space="preserve">
    <value>取消</value>
    <comment>编辑区域</comment>
  </data>
  <data name="图像文件" xml:space="preserve">
    <value>图像文件</value>
  </data>
  <data name="在此贡献您的书评" xml:space="preserve">
    <value>在此贡献您的书评</value>
  </data>
  <data name="审查" xml:space="preserve">
    <value>审查</value>
    <comment>状态</comment>
  </data>
  <data name="屏蔽" xml:space="preserve">
    <value>屏蔽</value>
    <comment>状态</comment>
  </data>
  <data name="屏蔽原因" xml:space="preserve">
    <value>屏蔽原因</value>
  </data>
  <data name="建议不要订购本书" xml:space="preserve">
    <value>建议 不要订购本书</value>
  </data>
  <data name="建议订购本书" xml:space="preserve">
    <value>建议 订购本书</value>
  </data>
  <data name="您正在编辑他人的评注。原始创建者为X。" xml:space="preserve">
    <value>您正在编辑他人的评注。原始创建者为 {0}。</value>
  </data>
  <data name="提交评注" xml:space="preserve">
    <value>提交评注</value>
    <comment>编辑区域</comment>
  </data>
  <data name="文章标题" xml:space="preserve">
    <value>文章标题</value>
  </data>
  <data name="文章正文" xml:space="preserve">
    <value>文章正文</value>
  </data>
  <data name="是否订购" xml:space="preserve">
    <value>是否订购</value>
  </data>
  <data name="最后修改" xml:space="preserve">
    <value>最后修改</value>
  </data>
  <data name="本书正在征求订购意见" xml:space="preserve">
    <value>本书正在征求订购意见</value>
  </data>
  <data name="本评注目前为X状态" xml:space="preserve">
    <value>本评注目前为 '{0}' 状态</value>
  </data>
  <data name="标题" xml:space="preserve">
    <value>标题</value>
    <comment>编辑区域</comment>
  </data>
  <data name="正文" xml:space="preserve">
    <value>正文</value>
    <comment>编辑区域</comment>
  </data>
  <data name="点这里立即添加我的显示名" xml:space="preserve">
    <value>点这里立即添加您的显示名</value>
  </data>
  <data name="状态" xml:space="preserve">
    <value>状态</value>
    <comment>命令按钮</comment>
  </data>
  <data name="状态修改史" xml:space="preserve">
    <value>状态修改史</value>
  </data>
  <data name="状态最后修改" xml:space="preserve">
    <value>状态最后修改</value>
  </data>
  <data name="确实要删除这条评注?" xml:space="preserve">
    <value>确实要删除这条评注?</value>
  </data>
  <data name="确实要取消对这条评注的修改?" xml:space="preserve">
    <value>确实要取消对这条评注的修改?</value>
  </data>
  <data name="精品" xml:space="preserve">
    <value>精品</value>
    <comment>状态</comment>
  </data>
  <data name="编辑" xml:space="preserve">
    <value>编辑</value>
    <comment>命令按钮</comment>
  </data>
  <data name="若想以个性化的作者名字发表评注" xml:space="preserve">
    <value>若想以个性化的作者名字发表评注</value>
  </data>
  <data name="订购建议" xml:space="preserve">
    <value>订购建议</value>
    <comment>编辑区域</comment>
  </data>
  <data name="订购本书" xml:space="preserve">
    <value>订购本书</value>
  </data>
  <data name="记录路径" xml:space="preserve">
    <value>记录路径</value>
  </data>
  <data name="评注" xml:space="preserve">
    <value>评注</value>
  </data>
  <data name="评注信息" xml:space="preserve">
    <value>评注信息</value>
  </data>
  <data name="还可详细阐述您的意见如下(可选)" xml:space="preserve">
    <value>还可详细阐述您的意见如下(可选)</value>
  </data>
  <data name="锁定" xml:space="preserve">
    <value>锁定</value>
    <comment>状态</comment>
  </data>
</root>