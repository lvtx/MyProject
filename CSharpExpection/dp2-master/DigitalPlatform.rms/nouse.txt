~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/*		
		// 解包到一组文件
		// parameter:
		// 		streamSource: 源流
		// 		strPath:      存放路径，为""时，表示存放在Environment.CurrentDirectory + "\download\1"
		//		fileNames:    返回解包后一组文件名，第一个表示xml文件，其它为子对象文件
		// result:
		//		-1: error
		//		0: successed
		public static int DisassemblePack (Stream streamSource,
			string strPath,
			out string[] fileNames)
		{
			fileNames = null;
			ArrayList aFileName = new ArrayList (); 
			string myFileName = "";

			//如果所给路径为空，则把缺省路径，运行目录下的download
			if (strPath == "")
			{
				string strDirectory = Environment.CurrentDirectory +"\\download";  //带不带\都一样
				if (Directory.Exists (strDirectory) == true)
					Directory.Delete  (strDirectory,true);  //带删除子内容
				
				Directory.CreateDirectory (strDirectory);
				strPath = strDirectory+"\\1";
			}

			string strID = strPath;//strDir + strRecordID;
			long lLength;

			//首先得到XML包
			byte[] bufferLength = new byte[8];
			long n = streamSource.Read(bufferLength,0,8);  //总长度
			if (n<8)
				return -1;
			n = streamSource.Read(bufferLength,0,8);  //xml长度
			if (n<8)
				return -1;
			lLength = System.BitConverter.ToInt64(bufferLength,0);  //将字节转换成整数

			myFileName = strID + ".xml";
			FileStream streamXml = File.Create (myFileName);
			n=StreamUtil.DumpStream(streamSource,
				streamXml,
				lLength);
			if (n != lLength)
				return -1;

			//加到文件名数组里
			aFileName.Add (myFileName);

			streamXml.Seek (0,SeekOrigin.Begin);
			XmlDocument domXml = new XmlDocument ();
			try
			{
				domXml.Load(streamXml);
			}
			catch(Exception ex)
			{
				//FileUtil.WriteText ("L:\\debug.txt","加载xml出错:"+ex.Message );
				return -1;
			}
			finally
			{
				streamXml.Close ();
			}

			//NamespaceManager mang = new 

			XmlNodeList ListFile = domXml.SelectNodes("//file");
			foreach(XmlNode nodeFile in ListFile) 
			{
				string strFileText = "";
				strFileText = DomUtil.GetNodeText (nodeFile);
				if (strFileText == "")
					continue;

				bufferLength = new byte[8];
				n = streamSource.Read(bufferLength,0,8);  //子文件总长度
				if (n<8)
					break;

				n = streamSource.Read(bufferLength,0,8); //子文件名的长度
				if (n<8)
					break;
				lLength = System.BitConverter.ToInt64(bufferLength,0);

				byte[] bufferFileName = new  byte[lLength];
				n = streamSource.Read(bufferFileName,0,(int)lLength);
				string strFileName = System.Text.Encoding.UTF8.GetString(bufferFileName);
				
				n = streamSource.Read(bufferLength,0,8);  //二进制长度
				if (n<8)
					break;
				lLength = System.BitConverter.ToInt64(bufferLength,0);

				myFileName = strID+"_"+strFileName;
				FileStream streamFile = File.Create (myFileName);
				try
				{
					n = StreamUtil.DumpStream (streamSource,
						streamFile,
						lLength);
					if (n != lLength)
						return -1;
				}
				finally
				{
					streamFile.Close ();
				}

				//把子对象文件名加到数组里
				aFileName.Add (myFileName);
			}
			fileNames = new string [aFileName.Count ];
			for(int i=0;i<fileNames.Length ;i++)
			{
				fileNames[i] = (string)aFileName[i];
			}
			return 0;
		}

*/