							// 完整的新记录
							if (sourceBuffer.Length == nTotalLength)
							{
								strCommand = "use master \n"
									+ " use " + GetSqlName() + " "
									+ " INSERT INTO records(id,data,contentType,range)"
									+ " VALUES(@id,@data,'xml',@range)";
								command = new SqlCommand(strCommand,
									connection);

								SqlParameter idParam1 =
									command.Parameters.Add("@id",
									SqlDbType.NVarChar);
								idParam1.Value = strID;

								SqlParameter dataParam  =
										// 完整的新记录
							if (sourceBuffer.Length == nTotalLength)
							{
								strCommand = "use master \n"
									+ " use " + GetSqlName() + " "
									+ " INSERT INTO records(id,data,contentType,range)"
									+ " VALUES(@id,@data,'xml',@range)";
								command = new SqlCommand(strCommand,
									connection);

								SqlParameter idParam1 =
									command.Parameters.Add("@id",
									SqlDbType.NVarChar);
								idParam1.Value = strID;

								SqlParameter dataParam  =
									command.Parameters.Add("@data",
									SqlDbType.Binary,
									sourceBuffer.Length);
								dataParam.Value = sourceBuffer;

								SqlParameter rangeParam =
									command.Parameters.Add("@range",
									SqlDbType.NVarChar);
								rangeParam.Value = Convert.ToString(nStart) + "-" + Convert.ToString(nStart + sourceBuffer.Length -1);

								command.ExecuteNonQuery();

								goto CREATEKEYS;
							}						command.Parameters.Add("@data",
									SqlDbType.Binary,
									sourceBuffer.Length);
								dataParam.Value = sourceBuffer;

								SqlParameter rangeParam =
									command.Parameters.Add("@range",
									SqlDbType.NVarChar);
								rangeParam.Value = Convert.ToString(nStart) + "-" + Convert.ToString(nStart + sourceBuffer.Length -1);

								command.ExecuteNonQuery();

								goto CREATEKEYS;
							}
							
							



						DpKeys newKeys = new DpKeys();
						//加载配置文件
						XmlDocument m_cfgDom = new XmlDocument();
						m_cfgDom.Load(m_Container.CfgDir + GetKeys());

						//加载新Xml
						byte[] xmlBuffer = null;
						nRet = this.GetXml(strID,
							0,
							-1,
							out xmlBuffer,
							out outputTimestamp,
							out strError);
						if (nRet == -1)
							return -1;

						MemoryStream s = new MemoryStream();
						s.Write(xmlBuffer,
							0,
							xmlBuffer.Length);
						s.Seek(0,SeekOrigin.Begin);
						XmlDocument newDataDom = new XmlDocument();
						newDataDom.Load(s);
						s.Close();

/*

						// 当为覆盖状态时,新旧文件碰
						if (bIsExist == true)
						{
							ArrayList aOldFileID = new ArrayList ();
							XmlNodeList oldFileList = oldDom.SelectNodes ("//file");
							foreach(XmlNode oldFileNode in oldFileList)
							{
								string strOldFileID = DomUtil.GetNodeText (oldFileNode);
								if (strOldFileID != "")
									aOldFileID.Add (strOldFileID);
							}

							ArrayList targetLeft = new ArrayList ();
							ArrayList targetMiddle = new ArrayList ();
							ArrayList targetRight = new ArrayList ();
							string strInfo;

							//数据必须先排序
							aNewFileID.Sort ();
							aOldFileID.Sort ();

							//新旧两个File数组碰
							DatabaseCollection.MergeFileList (aNewFileID,
								aOldFileID,
								targetLeft,
								targetMiddle,
								targetRight,
								out strInfo);

							//删除多余的旧文件
							if (targetRight.Count > 0)
							{
								foreach(string strNeedDeleteFile in targetRight)
								{
									string strMessage;
									db.DeleteForce (strID + "_" + strNeedDeleteFile,
										true,
										out strMessage);
								}
							}
						}
*/



						XmlNode nodeID = newDataDom.SelectSingleNode ("//__id");
						DomUtil.SetNodeText (nodeID,strID);

						newKeys.Create(newDataDom,
							m_cfgDom,
							strID,
							m_Container.KeySize,
							this);   //改stopword

						newKeys.Sort();
						newKeys.RemoveDup();

						string strCommand = "";
						SqlCommand command = null;
						
						SqlConnection connection = new SqlConnection(this.GetLocation());
						connection.Open();
						try
						{
							// 根据id删除所有旧的检索点
							foreach (tableItem oneTable in this.Tables )
							{
								strCommand = "use master \n"
									+ " use " + GetSqlName()
									+ " DELETE FROM " + oneTable.Name
									+ " WHERE idstring=@id";

								command = new SqlCommand(strCommand,
									connection);

								SqlParameter idParam  =
									command.Parameters.Add("@id",
									SqlDbType.NVarChar);
								idParam.Value = strID;

								command.ExecuteNonQuery();
							}

							foreach(DpKey oneKey in newKeys)
							{
								//加keynum
								strCommand = "use " + GetSqlName() + " "
									+ " INSERT INTO keys_" + oneKey.Table
									+ "(keystring,fromstring,idstring,keystringnum) "
									+ "VALUES(@key,@from,@id,@keynum)";
								command = new SqlCommand(strCommand,
									connection);

								SqlParameter keyParam  =
									command.Parameters.Add("@key",
									SqlDbType.NVarChar);
								keyParam.Value = oneKey.Key;

								SqlParameter fromParam  =
									command.Parameters.Add("@from",
									SqlDbType.NVarChar);
								fromParam.Value = oneKey.From;

								SqlParameter idParam  =
									command.Parameters.Add("@id",
									SqlDbType.NVarChar);
								idParam.Value = oneKey.ID;

								SqlParameter keynumParam  =
									command.Parameters.Add("@keynum",
									SqlDbType.NVarChar);
								keynumParam.Value = oneKey.Num;

								command.ExecuteNonQuery();
							}
						}
						finally
						{
							connection.Close();
						}							