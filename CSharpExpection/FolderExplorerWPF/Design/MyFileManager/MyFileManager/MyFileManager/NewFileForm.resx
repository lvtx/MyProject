<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAB3uS8Ud7kwWni6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6
        MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6MIF4ujCBeLowgXi6
        MIF4uTBYeLgwEne5MIV3uTD3eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i5MPV4uTCFeLow8Xi6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MPF4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow9Xi6MMl4ujDJeLow9Xi6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94uTDZeLkwPHi5MDx4uTDZeLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i5MNV4uTAqeLkwKni5
        MNV4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLkw1Xi5
        MCp4uTAqeLkw1Xi6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94uTDVeLkwKni5MCp4uTDVeLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i5MNV4uTAqeLkwKni5MNV4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow9Xi6
        MNd4ujDVeLow1Xi6MNV4ujDVd7owsXi5MCR4uTAkd7owsXi6MNV4ujDVeLow1Xi6MNV4ujDXeLow9Xi6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP93ujDLeLowPHi7MCp4uzAqeLswKni7MCp3ui8keLswCHi7MAh3ui8keLswKni7MCp4uzAqeLswKni6
        MDx3ujDLeLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i5MMt4uTA8eLkwKni5MCp4uTAqeLkwKni5MCR4uzAIeLswCHi5MCR4uTAqeLkwKni5
        MCp4uTAqeLkwPHi5MMt4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLkw9Xi5MNl4uTDVeLkw1Xi5MNV4uTDVeLkwsXi5MCR4uTAkeLkwsXi5
        MNV4uTDVeLkw1Xi5MNV4uTDZeLkw9Xi6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94uTDVeLkwKni5
        MCp4uTDVeLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i5
        MNV4uTAqeLkwKni5MNV4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLkw1Xi5MCp4uTAqeLkw1Xi6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94uTDVeLkwKni5MCp4uTDVeLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i5MNl4uTA8eLkwPHi5MNl4ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLkw9Xi5MMt4uTDLeLkw9Xi6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MON4ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow6Xi6MOl4ujDpeLow6Xi6MOl4ujDpeLow6Xi6MOl4ujDpeLow6Xi6
        MOl4ujDpeLow6Xi6MOl3uTDJdrkwTni6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6
        MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujBAeLowQHi6MEB4ujBAeLowQHi6MEB4ujBAeLowQHi6
        MEB4ujBAeLowQHi6MEB4ujBAeLowQHe4LyR4tzAEeLow/3i6MP94ujDjeLow1Xi6MNV4ujDVeLow1Xi6
        MNV4ujDVeLow1Xi6MNV4ujDVeLow1Xi6MON4ujD/eLow/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4ujD/eLow/3i5L3J4uzAqeLswKni7
        MCp4uzAqeLswKni7MCp4uzAqeLswKni7MCp4uzAqeLkvcni6MP94ujD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHi6MP94ujD/d7kwZHi7
        MBZ4uzAWeLswFni7MBZ4uzAWeLswFni7MBZ4uzAWeLswFni7MBZ3uTBkeLow/3i6MP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeLkw8Xi6
        MP94uTDVeLowv3i6ML94ujC/eLowv3i6ML94ujC/eLowv3i6ML94ujC/eLowv3i5MNV4ujD/eLkw8QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB3uTCDd7kw83i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3i6MP94ujD/eLow/3e5
        MPN3uTCDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHe4MBB3ujBQeLowfni6MH54ujB+eLowfni6MH54ujB+eLowfni6MH54ujB+eLowfni6
        MH54ujB+d7owUHe4MBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwAAAAwAAAAAAAAAAAAAAAAAAAAAAAYAAAAGAAAABgAAAAYAAAAGAAAAB
        gAAAf/4AAH/+AAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        //8AAP//P/z//z/8//8AAP//AAD///////8=
</value>
  </data>
</root>