//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalPlatform.UnionCatalogClient.UnionCatalogServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dp2003.com/unioncatalog/", ConfigurationName="UnionCatalogServiceReference.UnionCatalogService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface UnionCatalogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/unioncatalog/UnionCatalogService/UpdateRecord", ReplyAction="http://dp2003.com/unioncatalog/UnionCatalogService/UpdateRecordResponse")]
        int UpdateRecord(out string strOutputRecPath, out string strOutputTimestamp, out string strError, string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/unioncatalog/UnionCatalogService/UpdateRecord", ReplyAction="http://dp2003.com/unioncatalog/UnionCatalogService/UpdateRecordResponse")]
        System.IAsyncResult BeginUpdateRecord(string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateRecord(out string strOutputRecPath, out string strOutputTimestamp, out string strError, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UnionCatalogServiceChannel : DigitalPlatform.UnionCatalogClient.UnionCatalogServiceReference.UnionCatalogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strOutputRecPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string strOutputTimestamp {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strError {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnionCatalogServiceClient : System.ServiceModel.ClientBase<DigitalPlatform.UnionCatalogClient.UnionCatalogServiceReference.UnionCatalogService>, DigitalPlatform.UnionCatalogClient.UnionCatalogServiceReference.UnionCatalogService {
        
        private BeginOperationDelegate onBeginUpdateRecordDelegate;
        
        private EndOperationDelegate onEndUpdateRecordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRecordCompletedDelegate;
        
        public UnionCatalogServiceClient() {
        }
        
        public UnionCatalogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnionCatalogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnionCatalogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnionCatalogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<UpdateRecordCompletedEventArgs> UpdateRecordCompleted;
        
        public int UpdateRecord(out string strOutputRecPath, out string strOutputTimestamp, out string strError, string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp) {
            return base.Channel.UpdateRecord(out strOutputRecPath, out strOutputTimestamp, out strError, strAuthString, strAction, strRecPath, strFormat, strRecord, strTimestamp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRecord(string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRecord(strAuthString, strAction, strRecPath, strFormat, strRecord, strTimestamp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndUpdateRecord(out string strOutputRecPath, out string strOutputTimestamp, out string strError, System.IAsyncResult result) {
            return base.Channel.EndUpdateRecord(out strOutputRecPath, out strOutputTimestamp, out strError, result);
        }
        
        private System.IAsyncResult OnBeginUpdateRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strAuthString = ((string)(inValues[0]));
            string strAction = ((string)(inValues[1]));
            string strRecPath = ((string)(inValues[2]));
            string strFormat = ((string)(inValues[3]));
            string strRecord = ((string)(inValues[4]));
            string strTimestamp = ((string)(inValues[5]));
            return this.BeginUpdateRecord(strAuthString, strAction, strRecPath, strFormat, strRecord, strTimestamp, callback, asyncState);
        }
        
        private object[] OnEndUpdateRecord(System.IAsyncResult result) {
            string strOutputRecPath = this.GetDefaultValueForInitialization<string>();
            string strOutputTimestamp = this.GetDefaultValueForInitialization<string>();
            string strError = this.GetDefaultValueForInitialization<string>();
            int retVal = this.EndUpdateRecord(out strOutputRecPath, out strOutputTimestamp, out strError, result);
            return new object[] {
                    strOutputRecPath,
                    strOutputTimestamp,
                    strError,
                    retVal};
        }
        
        private void OnUpdateRecordCompleted(object state) {
            if ((this.UpdateRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRecordCompleted(this, new UpdateRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRecordAsync(string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp) {
            this.UpdateRecordAsync(strAuthString, strAction, strRecPath, strFormat, strRecord, strTimestamp, null);
        }
        
        public void UpdateRecordAsync(string strAuthString, string strAction, string strRecPath, string strFormat, string strRecord, string strTimestamp, object userState) {
            if ((this.onBeginUpdateRecordDelegate == null)) {
                this.onBeginUpdateRecordDelegate = new BeginOperationDelegate(this.OnBeginUpdateRecord);
            }
            if ((this.onEndUpdateRecordDelegate == null)) {
                this.onEndUpdateRecordDelegate = new EndOperationDelegate(this.OnEndUpdateRecord);
            }
            if ((this.onUpdateRecordCompletedDelegate == null)) {
                this.onUpdateRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRecordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRecordDelegate, new object[] {
                        strAuthString,
                        strAction,
                        strRecPath,
                        strFormat,
                        strRecord,
                        strTimestamp}, this.onEndUpdateRecordDelegate, this.onUpdateRecordCompletedDelegate, userState);
        }
    }
}
