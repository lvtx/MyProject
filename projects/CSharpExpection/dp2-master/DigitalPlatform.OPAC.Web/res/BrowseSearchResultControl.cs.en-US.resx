<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="empty_resultset" xml:space="preserve">
    <value>(No results)</value>
  </data>
  <data name="hit_count_summary" xml:space="preserve">
    <value>Hit {0} record(s), display in {1} page(s), current page no is {2}.</value>
  </data>
  <data name="maxpagecount" xml:space="preserve">
    <value>(Total Page: {0})</value>
  </data>
  <data name="page_count_summary" xml:space="preserve">
    <value>({0} page(s))</value>
  </data>
  <data name="从我的书架移除" xml:space="preserve">
    <value>Remove from myshelf</value>
  </data>
  <data name="全部事项" xml:space="preserve">
    <value>All items</value>
  </data>
  <data name="共有n个事项成功从我的书架中移除" xml:space="preserve">
    <value>{0} item(s) has been removed from "MyBookshelf". </value>
  </data>
  <data name="共有n个事项成功加入我的书架" xml:space="preserve">
    <value>{0} item(s) has been added to "MyBookshelf". </value>
  </data>
  <data name="内容" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="前页" xml:space="preserve">
    <value>PrevPage</value>
  </data>
  <data name="加入我的书架" xml:space="preserve">
    <value>Add to myshelf</value>
  </data>
  <data name="后页" xml:space="preserve">
    <value>NextPage</value>
  </data>
  <data name="命中结果" xml:space="preserve">
    <value>Search Results</value>
  </data>
  <data name="导出" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="导出范围" xml:space="preserve">
    <value>Export range</value>
  </data>
  <data name="序号" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="文件格式" xml:space="preserve">
    <value>File format</value>
  </data>
  <data name="显示格式" xml:space="preserve">
    <value>Display Format</value>
  </data>
  <data name="末页" xml:space="preserve">
    <value>LastPage</value>
  </data>
  <data name="浏览" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="点这里可去我的书架" xml:space="preserve">
    <value>Click here to goto "MyBookshelf"</value>
  </data>
  <data name="第" xml:space="preserve">
    <value>Page:</value>
  </data>
  <data name="编码方式" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="记录路径文件" xml:space="preserve">
    <value>Record-path file</value>
  </data>
  <data name="请指定导出特性" xml:space="preserve">
    <value>Please select export parameters</value>
  </data>
  <data name="跳到" xml:space="preserve">
    <value>Go</value>
  </data>
  <data name="选择的事项" xml:space="preserve">
    <value>Selected items</value>
  </data>
  <data name="首页" xml:space="preserve">
    <value>FirstPage</value>
  </data>
</root>