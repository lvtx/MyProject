~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/*
		// 内部后插一个字段
		// parameters:
		//		nIndex	序号
		//		field	字段对象
		internal void InsertAfterFieldInternal(int nIndex,
			Field field)
		{
			Debug.Assert(field != null,"InsertAfterFieldInternal() field参数不能不null。");

			if (nIndex+1 < this.Count)
			{
				this.Insert(nIndex+1,field);
			}
			else
			{
				this.Add(field);
			}

			// 文档发生改变
			this.marcEditor.FireTextChanged();
		}
*/

/*
		// 后插一个新字段，只供内部使用，
		// 因为该函数只处理内存对象，不涉及界面的事情
		// parameters:
		//		nIndex	参考的位置
		//		field	字段对象
		// return:
		//		void
		internal void InsertAfterFieldInternal(int nIndex,
			Field field)
		{
			Debug.Assert(nIndex < this.Count,"nIndex参数不能大于总个数。");
            
			string strCaption = this.marcEditor.GetLabel(strName);
			field.m_strNameCaption = strCaption;
			field.container = this;
			field.CalculateHeight(null, false);

			this.InsertAfterFieldInternal(nIndex,
				field);

			// 文档发生改变
			this.marcEditor.FireTextChanged();
		}
*/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			
			//--------------
			menuItem = new MenuItem ("-");
			contextMenu.MenuItems.Add(menuItem);


			// 修改字段名
			menuItem = new MenuItem("修改字段名");
			menuItem.Click += new System.EventHandler(this.ChangeFieldNameWithDlg);
			contextMenu.MenuItems.Add(menuItem);
			if (this.SelectedFieldIndices.Count == 1)
			{
				// 头标区不能修改字段名
				if (this.FocusedField.m_strName == "###")
					menuItem.Enabled = false;
				else
					menuItem.Enabled = true;
			}
			else
			{
				menuItem.Enabled = false;
			}

			// 修改指示符
			menuItem = new MenuItem("修改指示符");
			menuItem.Click += new System.EventHandler(this.ChangeIndicatorWithDlg);
			contextMenu.MenuItems.Add(menuItem);
			if (this.SelectedFieldIndices.Count == 1)
			{
				if (Record.IsControlFieldName(this.FocusedField.m_strName) == false)
					menuItem.Enabled = true;
				else
					menuItem.Enabled = false;
			}
			else
			{
				menuItem.Enabled = false;
			}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		// 修改字段名称
		private void ChangeFieldNameWithDlg(object sender,
			System.EventArgs e)
		{ 
			if (this.FocusedField == null)
			{
				Debug.Assert (false,"在ChangeFieldNameWithDlg时，FocusedField不可能为null");
				return;
			}

			if (this.FocusedField.m_strName == "###")
			{
				MessageBox.Show(this,"在头标区处不能修改字段名。");
				return;
			}

			FieldNameDlg dlg = new FieldNameDlg();
			dlg.Text = "修改字段名称";
			dlg.textBox_fieldName.Text = this.FocusedField.m_strName;

			dlg.StartPosition = FormStartPosition.CenterScreen;
			dlg.ShowDialog();
			if (dlg.DialogResult != DialogResult.OK)
				return;

			string strNewName = dlg.textBox_fieldName.Text;
			
			this.ChangeFieldName(this.FocusedField,strNewName);

			// 不让小edit全选上
			this.curEdit.SelectionLength = 0;
		}
		
		
		
		// 修改字段指示符
		private void ChangeIndicatorWithDlg(object sender,
			System.EventArgs e)
		{ 
			Debug.Assert(this.SelectedFieldIndices.Count == 1,"此时不应调。");

			if (Record.IsControlFieldName(this.FocusedField.m_strName) == true)
			{
				MessageBox.Show(this,"'" + this.FocusedField.m_strName + "'字段是控制字段，没有指示符。");
				return;
			}

			IndicatorNameDlg dlg = new IndicatorNameDlg();
			dlg.Text = "修改字段指示符";
			dlg.textBox_indicator.Text = this.FocusedField.Indicator;

			dlg.StartPosition = FormStartPosition.CenterScreen;

			dlg.ShowDialog();
			if (dlg.DialogResult != DialogResult.OK)
				return;

			string strNewIndicator = dlg.textBox_indicator.Text;
			// 此外应使用Indicator属性
			if (this.FocusedField.Indicator != strNewIndicator)
			{
				this.FocusedField.Indicator = strNewIndicator;
			}

			// 不让小edit全选上
			this.curEdit.SelectionLength = 0;
		}




		// 追加字段
		private void AppendFieldWithDlg(object sender,
			System.EventArgs e)
		{ 
			FieldNameDlg dlg = new FieldNameDlg();
			dlg.Text = "新建字段";
			dlg.StartPosition = FormStartPosition.CenterScreen;
			dlg.ShowDialog();
			if (dlg.DialogResult != DialogResult.OK)
				return;

			string strFieldName = dlg.textBox_fieldName.Text;

			this.record.AddField(strFieldName,
				"  ",//strIndicator
				"",
				false);
		}
 
 
 /*
		// 前插字段
		private void InsertBeforeFieldWithDlg(object sender,
			System.EventArgs e)
		{ 
			Debug.Assert (this.SelectedFieldIndices.Count ==1,"在'前插'时，SelectedFieldIndices数量必须为1");

			if (this.FocusedField.m_strName == "###")
			{
				MessageBox.Show(this,"在头标区前不能插入字段。");
				return;
			}

			FieldNameDlg dlg = new FieldNameDlg();
			dlg.Text = "新建字段";
			dlg.StartPosition = FormStartPosition.CenterScreen;
			dlg.ShowDialog();
			if (dlg.DialogResult != DialogResult.OK)
				return;

			string strFieldName = dlg.textBox_fieldName.Text;
			
			this.record.InsertBeforeField(this.FocusedFieldIndex,
				strFieldName,
				"  ", //strIndicator
				"");
		}
*/



/*
		// 给当前字段的后面新增一个字段
		internal void InsertAfterFieldWithDlg()
		{
			Debug.Assert (this.SelectedFieldIndices.Count ==1,"在'后插'时，FocusedFieldIndex不能为-1");
				
			FieldNameDlg dlg = new FieldNameDlg();
			dlg.Text = "新增字段";
			dlg.StartPosition = FormStartPosition.CenterScreen;
			dlg.ShowDialog();
			if (dlg.DialogResult != DialogResult.OK)
				return;

			string strFieldName = dlg.textBox_fieldName.Text;

			// 调InsertAfterField，把界面也管了
			this.record.InsertAfterField(this.FocusedFieldIndex,
				strFieldName,
				"  ",
				"");
		}
*/